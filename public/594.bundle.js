"use strict";(self.webpackChunkssr_rb_ui=self.webpackChunkssr_rb_ui||[]).push([[594],{4655:(e,n,t)=>{t.d(n,{Z:()=>r});var o,l=t(7294);function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},a.apply(this,arguments)}const r=function(e){return l.createElement("svg",a({"aria-hidden":"true","data-prefix":"far","data-icon":"times",className:"times-regular_svg__svg-inline--fa times-regular_svg__fa-times times-regular_svg__fa-w-10",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 320 512"},e),o||(o=l.createElement("path",{fill:"currentColor",d:"m207.6 256 107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z"})))}},9594:(e,n,t)=>{t.r(n),t.d(n,{default:()=>b});var o=t(7294),l=t(2690),a=t(3454),r=t(3935),i=t(9334),s=t(4655),c=t(9639);function d(e){var n=e.onConfirm,t=e.onCancel,l=e.title,a=e.visible,d=e.children,h=e.scrollable,m=e.centered,u=e.footer,b=["modal-dialog"];h&&b.push("modal-dialog-scrollable"),m&&b.push("modal-dialog-centered");var f=(0,o.useRef)(null),p=(0,o.useRef)(null);(0,o.useEffect)((function(){var e,n;a?(e=f.current,n=p.current,e&&n&&(document.body.style.overflow="hidden",document.body.style.paddingRight="15px",requestAnimationFrame((function(){n.style.visibility="visible",n.classList.add("show"),e.style.visibility="visible",e.classList.add("show")})))):function(){var e=f.current,n=p.current;e&&n&&requestAnimationFrame((function(){e.classList.remove("show"),e.style.visibility="hidden",n.classList.remove("show"),setTimeout((function(){document.body.style.overflow="",document.body.style.paddingRight=""}),0)}))}()}),[a]);var g=o.createElement("div",{className:"modal fade",ref:f,tabIndex:-1,onTransitionEnd:function(e){var n=f.current,t=p.current;n&&t&&e.target.classList.contains("modal")&&(a||(n.style.visibility="hidden",t.style.visibility="hidden"))},onClick:function(e){(e.target.classList.contains("modal")||e.target.classList.contains("modal-dialog"))&&t(e)},role:"dialog"},o.createElement("div",{className:b.join(" ")},o.createElement("div",{className:"modal-content"},o.createElement("div",{className:"modal-header"},o.createElement("h5",{className:"modal-title"},l),o.createElement(c.Z,{variant:"link",prefixIcon:o.createElement(i.Z,{component:s.Z}),onClick:t})),o.createElement("div",{className:"modal-body"},d),o.createElement("div",{className:"modal-footer"},u&&u.length?u:o.createElement(o.Fragment,null,o.createElement(c.Z,{variant:"secondary",onClick:t},"Close"),o.createElement(c.Z,{variant:"primary",onClick:n},"Save changes")))))),w=o.createElement("div",{className:"modal-backdrop",ref:p}),v=o.createElement(o.Fragment,null,w,g);return r.createPortal(v,document.body)}d.defaultProps={scrollable:!1,centered:!1,footer:[],onConfirm:function(){}};const h=d;function m(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,a=[],r=!0,i=!1;try{for(t=t.call(e);!(r=(o=t.next()).done)&&(a.push(o.value),!n||a.length!==n);r=!0);}catch(e){i=!0,l=e}finally{try{r||null==t.return||t.return()}finally{if(i)throw l}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return u(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?u(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}const b=function(){var e=m((0,o.useState)(!1),2),n=e[0],t=e[1],r=m((0,o.useState)(!1),2),i=r[0],s=r[1],d=m((0,o.useState)(!1),2),u=d[0],b=d[1],f=m((0,o.useState)(!1),2),p=f[0],g=f[1];return o.createElement("div",{className:"rb-modals container-fluid"},o.createElement("section",{className:"rb-modal-basic"},o.createElement("h1",{className:"rb-title"},"Modal"),o.createElement("div",{className:"rb-group"},o.createElement("div",{className:"rb-modal-wrapper"},o.createElement(c.Z,{onClick:function(){t(!0)}},"Launch demo modal"),o.createElement(h,{title:"Basic Modal",visible:n,onCancel:function(){t(!1)},onConfirm:function(){t(!1)}},o.createElement("p",null,"Modal body text goes here.")))),o.createElement("div",{className:"rb-code"},o.createElement(l.Z,{language:"javascript",style:a.Z},"\n    import Modal from '../components/Modal';\n    import Button from '../components/Button';\n    \n    const [isModalVisible, setModalVisible] = useState(false);\n    \n    function showModalHandler() {\n      setModalVisible(true);\n    }\n    \n    function cancelHandler() {\n      setModalVisible(false);\n    }\n  \n    function confirmHandler() {\n      setModalVisible(false);\n    }\n    \n    <Button onClick={showModalHandler}>Launch demo modal</Button>\n    <Modal\n      title=\"Basic Modal\"\n      visible={isModalVisible}\n      onCancel={cancelHandler}\n      onConfirm={confirmHandler}\n    >\n      <p>Modal body text goes here.</p>\n    </Modal>\n  "))),o.createElement("section",{className:"rb-modal-scrollable"},o.createElement("h1",{className:"rb-title"},"Scrollable"),o.createElement("div",{className:"rb-group"},o.createElement("div",{className:"rb-modal-wrapper"},o.createElement(c.Z,{onClick:function(){s(!0)}},"Launch scrollable modal"),o.createElement(h,{title:"Scrollable Modal",visible:i,onCancel:function(){s(!1)},onConfirm:function(){s(!1)},scrollable:!0},"This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll. This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll. This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll.This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll. This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll. This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll. This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll.This is some placeholder content to show the scrolling behavior for modals. We use repeated line breaks to demonstrate how content can exceed minimum inner height, thereby showing inner scrolling. When content becomes longer than the predefined max-height of modal, content will be cropped and scrollable within the modal. This content should appear at the bottom after you scroll."))),o.createElement("div",{className:"rb-code"},o.createElement(l.Z,{language:"javascript",style:a.Z},"\n    import Modal from '../components/Modal';\n    import Button from '../components/Button';\n    \n    const [isModalVisible, setModalVisible] = useState(false);\n    \n    function showModalHandler() {\n      setModalVisible(true);\n    }\n    \n    function cancelHandler() {\n      setModalVisible(false);\n    }\n  \n    function confirmHandler() {\n      setModalVisible(false);\n    }\n    \n    <Button onClick={showModalHandler1}>Launch scrollable modal</Button>\n    <Modal\n      title=\"Scrollable Modal\"\n      visible={isModalVisible}\n      onCancel={cancelHandler}\n      onConfirm={confirmHandler}\n      scrollable\n    >\n      This is some placeholder content to show the scrolling behavior for modals. We use\n      repeated line breaks to demonstrate how content can exceed minimum inner height, thereby\n      showing inner scrolling. When content becomes longer than the predefined max-height of\n      modal, content will be cropped and scrollable within the modal. This content should\n      appear at the bottom after you scroll. This is some placeholder content to show the\n      scrolling behavior for modals. We use repeated line breaks to demonstrate how content\n      can exceed minimum inner height, thereby showing inner scrolling. When content becomes\n      longer than the predefined max-height of modal, content will be cropped and scrollable\n      within the modal. This content should appear at the bottom after you scroll. This is\n      some placeholder content to show the scrolling behavior for modals. We use repeated line\n      breaks to demonstrate how content can exceed minimum inner height, thereby showing inner\n      scrolling. When content becomes longer than the predefined max-height of modal, content\n      will be cropped and scrollable within the modal. This content should appear at the\n      bottom after you scroll.This is some placeholder content to show the scrolling behavior\n      for modals. We use repeated line breaks to demonstrate how content can exceed minimum\n      inner height, thereby showing inner scrolling. When content becomes longer than the\n      predefined max-height of modal, content will be cropped and scrollable within the modal.\n      This content should appear at the bottom after you scroll. This is some placeholder\n      content to show the scrolling behavior for modals. We use repeated line breaks to\n      demonstrate how content can exceed minimum inner height, thereby showing inner\n      scrolling. When content becomes longer than the predefined max-height of modal, content\n      will be cropped and scrollable within the modal. This content should appear at the\n      bottom after you scroll. This is some placeholder content to show the scrolling behavior\n      for modals. We use repeated line breaks to demonstrate how content can exceed minimum\n      inner height, thereby showing inner scrolling. When content becomes longer than the\n      predefined max-height of modal, content will be cropped and scrollable within the modal.\n      This content should appear at the bottom after you scroll. This is some placeholder\n      content to show the scrolling behavior for modals. We use repeated line breaks to\n      demonstrate how content can exceed minimum inner height, thereby showing inner\n      scrolling. When content becomes longer than the predefined max-height of modal, content\n      will be cropped and scrollable within the modal. This content should appear at the\n      bottom after you scroll.This is some placeholder content to show the scrolling behavior\n      for modals. We use repeated line breaks to demonstrate how content can exceed minimum\n      inner height, thereby showing inner scrolling. When content becomes longer than the\n      predefined max-height of modal, content will be cropped and scrollable within the modal.\n      This content should appear at the bottom after you scroll.\n    </Modal>\n  "))),o.createElement("section",{className:"rb-modal-centered"},o.createElement("h1",{className:"rb-title"},"Centered"),o.createElement("div",{className:"rb-group"},o.createElement("div",{className:"rb-modal-wrapper"},o.createElement(c.Z,{onClick:function(){b(!0)}},"Launch centered modal"),o.createElement(h,{title:"Centered Modal",visible:u,onCancel:function(){b(!1)},onConfirm:function(){b(!1)},centered:!0},o.createElement("p",null,"Modal body text goes here.")))),o.createElement("div",{className:"rb-code"},o.createElement(l.Z,{language:"javascript",style:a.Z},"\n    import Modal from '../components/Modal';\n    import Button from '../components/Button';\n    \n    const [isModalVisible, setModalVisible] = useState(false);\n    \n    function showModalHandler() {\n      setModalVisible(true);\n    }\n    \n    function cancelHandler() {\n      setModalVisible(false);\n    }\n  \n    function confirmHandler() {\n      setModalVisible(false);\n    }\n    \n    <Button onClick={showModalHandler2}>Launch centered modal</Button>\n    <Modal\n      title=\"Centered Modal\"\n      visible={isModalVisible}\n      onCancel={cancelHandler}\n      onConfirm={confirmHandler}\n      centered\n    >\n      <p>Modal body text goes here.</p>\n    </Modal>\n  "))),o.createElement("section",{className:"rb-modal-custom-footer"},o.createElement("h1",{className:"rb-title"},"Custom footer"),o.createElement("div",{className:"rb-group"},o.createElement("div",{className:"rb-modal-wrapper"},o.createElement(c.Z,{onClick:function(){g(!0)}},"Launch custom footer modal"),o.createElement(h,{title:"Custom Footer",visible:p,onCancel:function(){g(!1)},footer:[o.createElement(c.Z,{key:"delete",variant:"danger",onClick:function(){g(!1)}},"delete"),o.createElement(c.Z,{key:"back",variant:"secondary",onClick:function(){g(!1)}},"back"),o.createElement(c.Z,{key:"submit",variant:"primary",onClick:function(){g(!1)}},"confirm")]},o.createElement("p",null,"Modal body text goes here.")))),o.createElement("div",{className:"rb-code"},o.createElement(l.Z,{language:"javascript",style:a.Z},'\n    import Modal from \'../components/Modal\';\n    import Button from \'../components/Button\';\n    \n    const [isModalVisible, setModalVisible] = useState(false);\n    \n    function showModalHandler() {\n      setModalVisible(true);\n    }\n    \n    function cancelHandler() {\n      setModalVisible(false);\n    }\n  \n    function confirmHandler() {\n      setModalVisible(false);\n    }\n    \n    function deleteHandler() {\n      setModalVisible(false);\n    }\n\n    function backHandler() {\n      setModalVisible(false);\n    }\n    \n    <Button onClick={showModalHandler}>Launch custom footer modal</Button>\n      <Modal\n        title="Custom Footer"\n        visible={isModalVisible}\n        onCancel={cancelHandler}\n        footer={[\n          <Button key="delete" variant="danger" onClick={deleteHandler}>\n            delete\n          </Button>,\n          <Button key="back" variant="secondary" onClick={backHandler}>\n            back\n          </Button>,\n          <Button key="submit" variant="primary" onClick={confirmHandler}>\n            confirm\n          </Button>,\n        ]}\n      >\n        <p>Modal body text goes here.</p>\n      </Modal>\n  '))))}}}]);